<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springboot.mapper.VisualizeMapper">
    <!-- 可视化所需大数 -->
    <select id="getBigNums" resultType="com.example.springboot.entity.VisualInfo">
        SELECT
        COUNT(*) AS totalOrder,  <!-- 工单总数 -->
        SUM(CASE WHEN o.end_time &gt; NOW() AND o.start_time &lt;= NOW() THEN 1 ELSE 0 END) AS toFinishOrder,  <!-- 待完成工单数 -->
        SUM(CASE WHEN o.end_time &lt;= NOW() THEN 1 ELSE 0 END) AS finishOrder,  <!-- 已完成工单数 -->
        (SELECT COUNT(*) FROM maintance_info p WHERE p.status = 2) AS toSendOrder  <!-- 待派单计划数 -->
        FROM
        order_info o;
    </select>
    <!-- 设备与其对应计划数 -->
    <select id="getEquipPlans" resultType="com.example.springboot.entity.VisualInfo">
        SELECT
            e.equip_id,           -- 设备ID
            e.equip_name,         -- 设备名称
            COUNT(m.plan_id) AS plan_count  -- 计划数
        FROM
            equip_info e
                LEFT JOIN
            maintance_info m ON e.equip_id = m.equip_id  -- 通过设备ID关联
        GROUP BY
            e.equip_id, e.equip_name;  -- 根据设备ID和设备名称分组
    </select>
    <!-- 各计划类型数 -->
    <select id="getPlanTypes" resultType="com.example.springboot.entity.VisualInfo">
        SELECT
            maintance_type planType,      -- 计划类型
            COUNT(*) typeCount  -- 对应的数量
        FROM
            maintance_info
        GROUP BY
            maintance_type;      -- 按计划类型分组
    </select>
    <select id="getEquipType" resultType="com.example.springboot.entity.VisualInfo">
        SELECT type_name equipType, COUNT(*) AS typeCount
        FROM equip_info
        GROUP BY type_name
    </select>
    <!-- 各工人工单数和工时数 -->
    <select id="getWorkerRank" resultType="com.example.springboot.entity.VisualInfo">
        SELECT
            w.worker_id,
            w.worker_name,
            w.pay_hour workerHours,
            COUNT(o.order_id) workerOrds
        FROM
            worker_info w
                LEFT JOIN
            order_info o ON w.worker_id = o.worker_id  -- 通过工人ID关联
        GROUP BY
            w.worker_id, w.worker_name, w.pay_hour;      -- 根据工人ID、名称和工资分组
    </select>

</mapper>
